##
# Code Reading - The Open Source Perspective
#

书名：	代码阅读方法与实践
		Code Reading - The Open Source Perspective
作者：	Diomidis Spinellis
译者：	赵学良
出版社：清华大学出版社
版次：	2004年3月第1版 2004年5月第2次印刷
来源：	Bob Zhang
时间：	2007-2-3

= C2：基本编程元素 =
* 我们所观测到的不是自然本身，而是大自然在我们所用的观测方法下呈现出来的特性。
* (Werner Heisenberg)
* 在检查代码时，一个好的做法是确保所有只用于单一文件的变量都声明为 static。

= C3：高级 C 数据结构 =
== 指针 ==
* 构造链式数据结构
* 引用动态分配的数据结构
* 实现引用调用（call by reference)
  * 返回函数结果
  * 避免参数复制带来的开销(const)
* 访问和迭代数据元素
* 传递数组参数
* 引用函数
* 作为其他值的别名
  * 效率上的考虑
  * 引用静态初始化的数据
  * 在全局语境中实现变量引用语义
* 代表字符串
  * 数据和字符串的区别(sizeof)
* 直接访问内存
== 结构 ==
* 将一般作为一个整体来使用的元素集合在一起
* 从函数中返回多个数据元素
* 构造链式数据结构
* 映射数据在硬件、网络连接和存储介质上的组织方式
  * volatile 限定符用来表明，底层的内存字段要被程序之外的实体使用，从而禁止编
    译器对这些字段执行优化，比如移除冗余引用。
  *
* 实现抽象数据类型
* 以面向对象的方式编程
== 共用体 ==
* 有效地利用存储空间
* 实现多态(polymorphism)
* 使用不同的内部表达方式对数据结构进行访问
== 动态内存分配 ==
== typedef 声明 ==

= C4：C 数据结构 =
== 向量 ==
* 数组常见的问题：访问数组之外的元素，数组越界
* buffer overflow 缓冲区溢出
* Asymmetric bound 不对称边界
  * [a,b)
  * 不对称区间中元素的数目等于高位边界与低位边界的差
  * 当不对称区间的高位边界等于低为边界时，区间为空
  * 不对称区间中的低为边界代表区间的第一个元素；高位边界代表区间外的第一个元素
== 矩阵和表 ==
* 区别：矩阵元素均未相同的类型，而表的元素大多数情况下类型不同
== 栈：LIFO ==
* 用于：算数表达式、块结构编程、标记语言、数据类型、层次数据结构、程序执行、遍
  历和查找策略、图形算法、中断处理、undo 命令实现
* overflow, underflow
== 队列：FIFO ==
* 主要用在：两个系统对接的地方
* 数组实现的有：circular buffer/ Ring buffer
== 映射 ==
* Hash Table
  * 使用数组提供的高效随机访问方式来组织在程序运行期间会发生变化的映射
  * 使用不同于简单数组索引的键来查找表中的元素。
  * 中心意思：从我们希望用来查找元素的键构造出一个数组索引
*
== 集合 ==
== 链表 ==
* doubly liked list
  * 能在链表的任意位置插入和移除元素
  * 可对链表进行逆向遍历
* circular linked list
  * 实现环形缓冲区
== 树 ==
== 图 ==
* 节点如何存储？
* 边如何表达？
* 边如何存储？
* 图的属性有哪些？
* “图”真正表达的是什么样的结构？

= C5：高级数据结构 =
* Recursive code, exception, parallelism, asynchronous signal, nolocal jump, c
  preprocessor, macro substition
* race condition
* 一般地，当看到宏参数有副作用时，比如赋值、前缀/后缀递增/递减、i/o和含有这些
  效果的函数调用，应十分小心。
* do...while(0)
* 宏替代和函数定义一个根本的不同是：预处理器能够用##运算符连接宏的参数。

= 附录B：阅读代码的格言 =
* http://digest-of-jick.blogspot.com/2007/02/blog-post_08.html

# vim:ft=text:
